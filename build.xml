<?xml version="1.0" ?>
<!-- ==================================================================+
 | Scanner                                                             |
 |                                                                     |
   $Id: build.xml 51805 2015-02-16 19:28:39Z hummelb $            
 |                                                                     |
 | Copyright (c)  2004-2005 Technische Universitaet Muenchen           |
 |                                                                     |
 | Technische Universitaet Muenchen             #########  ##########  |
 | Institut fuer Informatik - Lehrstuhl IV         ##  ##  ##  ##  ##  |
 | Prof. Dr. Manfred Broy                          ##  ##  ##  ##  ##  |
 | Boltzmannstr. 3                                 ##  ##  ##  ##  ##  |
 | 85748 Garching bei Muenchen                     ##  ##  ##  ##  ##  |
 | Germany                                         ##  ######  ##  ##  |
 +=====================================================================+-->

<!--
  $Id: build.xml 51805 2015-02-16 19:28:39Z hummelb $
  @version $Rev: 51805 $
  @levd.rating GREEN Hash: 7BF88309A626ADCC43441EA9434C6A5B
-->
<project name="simulink" default="test" basedir=".">

	<property name="display-name" value="ConQAT.lib Simulink" />
	<property name="version" value="2015.2" />
	<property name="grammars.dir" value="grammars" />

	<import file="std-env-base.xml" />

	<!-- === Classpath =========================================== -->

	<path id="classpath">
		<pathelement location="${lib.dir}/junit.jar" />
		<pathelement location="${lib.dir}/cup-runtime.jar" />
		<pathelement location="${lib.dir}/hamcrest-all-1.3.jar" />
		<pathelement location="${lib.dir}/mockito-all-1.9.5.jar" />
		<pathelement location="${build.dir}" />
	</path>

	<!-- === Init =============================================== -->

	<target name="init" depends="task-def-jflex, task-def-cup" />

	<!-- === Generate Targets =================================================== -->

	<target name="generate" depends="init, clean-generated-src" description="Generate all.">
		<!-- Scanner generation -->
		<jflex file="grammars/mdl.flex" destdir="${generated-src.dir}" />
		<jflex file="grammars/targetlink_data.flex" destdir="${generated-src.dir}" />
		
		<!-- Parser generation -->
		<property name="simulink.grammar.file.abs" location="grammars/mdl.cup" />
		<property name="generated-src.dir.abs" location="${generated-src.dir}" />
		<cup srcfile="${simulink.grammar.file.abs}" destdir="${generated-src.dir.abs}" interface="true" parser="MDLParser" symbols="SymbolConstants" />

		<property name="targetlink.grammar.file.abs" location="grammars/targetlink_data.cup" />
		<cup srcfile="${targetlink.grammar.file.abs}" destdir="${generated-src.dir.abs}" interface="true" parser="TargetlinkDataParser" symbols="SymbolConstants" />
		
		<!-- Clean up -->
		<antcall target="normalize-generated-src"/>
	</target>

	<!-- === Compile Targets ============================================ -->

	<target name="compile" depends="mkdirs, generate, std-env.compile" description="Compile Java sources." />

	<target name="compile-tests" depends="mkdirs, generate, std-env.compile-tests" description="Compile Java sources." />

	<!-- === Dist Targets =================================================== -->

	<target name="sourceDistActions">
		<copy todir="${dist.source.root.dir}/${grammars.dir}">
			<fileset dir="${grammars.dir}" />
		</copy>
	</target>

</project>
